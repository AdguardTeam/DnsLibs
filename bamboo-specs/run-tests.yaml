---
version: 2
plan:
  project-key: CL
  key: DRT
  name: DnsLibs - Run tests
stages:
- Default Stage:
    manual: false
    final: false
    jobs:
    - Run Android instrumented tests
    - Run C++ tests
Run Android instrumented tests:
  key: RAIT
  description: Runs Android instrumented tests
  docker:
    image: adguard/core-libs:latest
    volumes:
      ${bamboo.working.directory}: ${bamboo.working.directory}
      ${bamboo.tmp.directory}: ${bamboo.tmp.directory}
    docker-run-arguments: []
  tasks:
  - script:
      interpreter: SHELL
      scripts:
      - |-
        set -e -x

        whoami

        /opt/testing/emulator.sh start "emulator-${ANDROID_DEVICE_CONSOLE_PORT}"
        exit $?
      description: Starts emulator
  - clean
  - checkout:
      path: dns-libs
      force-clean-build: 'true'
      description: Checkout Default Repository
  - checkout:
      repository: dns-libs-private
      path: dns-libs-private
      force-clean-build: 'true'
      description: Checkout Default Repository
  - script:
      interpreter: SHELL
      scripts:
      - |-
        set -x

        cp ../../../../dns-libs-private/* .

        device_name="emulator-${ANDROID_DEVICE_CONSOLE_PORT}"
        ./gradlew :lib:runAndroidTests -P deviceName="${device_name}"

        ./gradlew :lib:analyzeAndroidTestResults
        exit $?
      working-dir: dns-libs/platform/android/dnsproxy
      description: Checks whether to test and runs instrumented tests
  final-tasks:
  - script:
      interpreter: SHELL
      scripts:
      - |-
        /opt/testing/emulator.sh stop "emulator-${ANDROID_DEVICE_CONSOLE_PORT}"
        exit $?
      description: Emulator shutdown
  - test-parser:
      type: junit
      ignore-time: 'false'
      test-results: dns-libs/platform/android/dnsproxy/*-reports/*.xml
  artifacts:
  - name: index.html
    location: dns-libs/platform/android/dnsproxy
    pattern: '**/index.html'
    shared: false
    required: true
  requirements:
  - system.builder.gradle.Gradle 5.4
  - adg-privileged-docker
  artifact-subscriptions: []
Run C++ tests:
  key: JOB1
  description: Runs C++ tests
  docker:
    image: adguard/core-libs:latest
    volumes:
      ${bamboo.working.directory}: ${bamboo.working.directory}
      ${bamboo.tmp.directory}: ${bamboo.tmp.directory}
    docker-run-arguments: []
  tasks:
  - checkout:
      force-clean-build: 'true'
      description: Checkout Default Repository
  - script:
      interpreter: SHELL
      scripts:
      - conan remote add -i 0 art ${bamboo.conanRepoUrl} || true
      description: conan remote
  - script:
      interpreter: SHELL
      scripts:
      - |-
        #!/bin/bash
        set -e
        set -x

        conan remote add -i 0 art ${bamboo.conanRepoUrl} || true

        export CMAKE=cmake
        export CTEST=ctest
        export CMAKE_MAKE_PROGRAM=ninja
        export CMAKE_MAKE_FLAGS=""
        export CMAKE_GENERATOR="Ninja"
        export SRC_ROOT=${PWD}
        mkdir -p build
        cd build
        rm -f CMakeCache.txt
        ${CMAKE} -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_C_COMPILER=clang \
            -DCMAKE_CXX_COMPILER=clang++ \
            -DCMAKE_C_FLAGS='' -DCMAKE_CXX_FLAGS='-stdlib=libc++' \
            -DCMAKE_MAKE_PROGRAM=${CMAKE_MAKE_PROGRAM} -G "${CMAKE_GENERATOR}" \
            ${SRC_ROOT}

        # build and run tests
        ${CMAKE_MAKE_PROGRAM} clean
        ${CMAKE_MAKE_PROGRAM} tests
        ${CTEST} -D ExperimentalTest --no-compress-output
      description: Compile and run tests
  final-tasks:
  - any-task:
      plugin-key: fr.cstb.bamboo.plugins.ctest.bamboo-ctest-plugin:test
      configuration:
        testFilePathPattern: '**/Testing/*/*.xml'
  - script:
      interpreter: SHELL
      scripts:
      - |-
        conan user -p "${bamboo_artifactoryPassword}" -r art "${bamboo_artifactoryUser}" > upload.txt 2>&1
        conan upload -r art --all -c '*' > upload.txt 2>&1
        echo conan upload finished with status $?
        conan remove -f '*'
      description: Conan upload and cleanup
  requirements:
  - adg-privileged-docker
  artifact-subscriptions: []
repositories:
- dns-libs:
    scope: global
- dns-libs-private:
    scope: global
triggers: []
branches:
  create: for-pull-request
  delete:
    after-deleted-days: 4
    after-inactive-days: 30
  integration:
    push-on-success: false
    merge-from: DnsLibs - Run tests
  link-to-jira: true
notifications: []
labels: []
other:
  concurrent-build-plugin: system-default
