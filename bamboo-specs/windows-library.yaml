---
version: 2
plan:
  project-key: CL
  key: DNSWL
  name: DnsLibs - Windows library
  description: Windows library
stages:
- Default Stage:
    manual: false
    final: false
    jobs:
    - DL - Win tests and deploy
DL - Win tests and deploy:
  key: JOB1
  tasks:
  - checkout:
      path: dns-libs
      force-clean-build: 'true'
      description: Checkout main repository
  - script:
      interpreter: WINDOWS_POWER_SHELL
      scripts:
      - |-
        $ErrorActionPreference = "Stop"

        cd ${bamboo.build.working.directory}
        cd dns-libs

        & conan remote add --index 0 art ${bamboo.conanRepoUrl}
        $Env:bamboo_sshSecretKey -replace '\\n', "`n" | sc $Env:USERPROFILE\.ssh\id_rsa

        # Save vcvars to switch between them
        $vcvars32 = cmd /c "vcvarsamd64_x86 & set"
        $vcvars64 = cmd /c "vcvars64 & set"
        $vcvarsarm64 = cmd /c "vcvarsamd64_arm64 & set"
        function setvar($_) {
          if ($_ -match "=") {
            $v = $_.split("="); set-item -force -path "ENV:\$($v[0])"  -value "$($v[1])"
          }
        }

        # Build 32-bit and 64-bit versions
        cd platform/windows
        cd capi
        & {
          $vcvars32 | foreach { setvar $_ }
          mkdir build
          pushd build
          & cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo `
            -DCMAKE_USE_OPENSSL=ON `
            -DCMAKE_C_COMPILER="cl.exe" `
            -DCMAKE_CXX_COMPILER="cl.exe" `
            -G Ninja ..
          if (!$?) { exit 1 }
          & ninja AdguardDns
          if (!$?) { exit 1 }
          & ninja tests
          if (!$?) { exit 1 }
          & ctest -D ExperimentalTest --no-compress-output
          if (!$?) { exit 1 }
          popd
        }
        & {
          $vcvars64 | foreach { setvar $_ }
          mkdir build64
          pushd build64
          & cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo `
            -DCMAKE_USE_OPENSSL=ON `
            -DCMAKE_C_COMPILER="cl.exe" `
            -DCMAKE_CXX_COMPILER="cl.exe" `
            -G Ninja ..
          if (!$?) { exit 1 }
          & ninja AdguardDns64
          if (!$?) { exit 1 }
          popd
        }
        & {
          $vcvarsarm64 | foreach { setvar $_ }
          mkdir buildarm64
          pushd buildarm64
          & cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo `
            -DCMAKE_USE_OPENSSL=ON `
            -DCMAKE_C_COMPILER="cl.exe" `
            -DCMAKE_CXX_COMPILER="cl.exe" `
            -DCMAKE_SYSTEM_NAME=Windows `
            -DCMAKE_SYSTEM_PROCESSOR=ARM64 `
            -G Ninja ..
          if (!$?) { exit 1 }
          & ninja AdguardDnsArm64
          if (!$?) { exit 1 }
          popd
        }
        cd ../cs/Adguard.Dns
        Remove-Item *.nupkg -Force
        & nuget sources add -Name Artifactory -Source "${bamboo.nugetRepoUrl}"
        if (!$?) { exit 1 }
        ${Env:NUGET_PACKAGES}="$(pwd)/packages"
        & nuget restore
        if (!$?) { exit 1 }

        # Skip strong name verification
        & sn -Vr *
        if (!$?) { exit 1 }
        # Run tests
        & msbuild Adguard.Dns.Tests /t:Build /t:Test /p:Configuration=Release /p:Platform=AnyCPU
        if (!$?) { exit 1 }
        # Check that package can be assembled
        & nuget pack Adguard.Dns -p Configuration=Release -p Platform=AnyCPU
        if (!$?) { exit 1 }
        exit 0
      working-dir: dns-libs
      description: Build C#library and Run C# tests
  final-tasks:
  - any-task:
      plugin-key: fr.cstb.bamboo.plugins.ctest.bamboo-ctest-plugin:test
      configuration:
        testFilePathPattern: '**/Testing/*/*.xml'
  - any-task:
      plugin-key: com.atlassian.bamboo.plugin.dotnet:nunit
      configuration:
        testResultsDirectory: '**/Adguard.Dns.Tests/TestResult.xml'
        pickupOutdatedFiles: 'false'
  - script:
      interpreter: WINDOWS_POWER_SHELL
      scripts:
      - |-
        conan remote login art $Env:bamboo_artifactoryUser --password $Env:bamboo_artifactoryPassword
        conan upload -r art -c "*" 2>&1 | Select-String "Uploading" -SimpleMatch
        Write-Host "conan upload finished with status $LASTEXITCODE"
        conan remove -c "*" *> $null
        conan cache clean *> $null
      working-dir: dns-libs
      description: Conan upload and cleanup
  requirements:
  - ephemeral-windows
  - image: registry.int.agrd.dev/windows/windows11-bamboo:18
  artifact-subscriptions: []
variables:
  cmakeBuildProfile: RelWithDebInfo
  sentryAuthToken: 65da97ad9f9542e9ab349b380baef027c0b9a0f46dbb4999a27c5971329949f1
  winProjectDir: platform/windows
repositories:
- dns-libs:
    scope: global
- dns-libs-private:
    scope: global
branches:
  create: for-pull-request
  delete:
    after-deleted-days: 4
    after-inactive-days: 30
  integration:
    push-on-success: false
    merge-from: DnsLibs - Windows Library
  link-to-jira: true
notifications: []
labels: []
other:
  concurrent-build-plugin: system-default
